openapi: 3.0.0
info:
  description: |
    fruitstore Server para el TP de TDL
  version: "1.0.0"
  title: Swagger Fruitstore
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/npersia/fruitstore/1.0.0
  - url: 'http://localhost:3080/api'
tags:
  - name: producto
    description: Gestion de productos
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'

  - name: pedido
    description: Gestion de pedido de productos
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
paths:
  /producto:
    post:
      tags:
        - producto
      summary: Agregar un nuevo producto
      operationId: addProduct
      responses:
        '405':
          description: Invalid input
      security:
        - fruitstore_auth:
            - 'write:producto'
            - 'read:producto'
      requestBody:
        $ref: '#/components/requestBodies/Producto'



    get:
      tags:
        - producto
      summary: Devuelve todos los productos
      description: Trae todos los productos existentes
      operationId: findAllProducts
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Producto'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Producto'
        '400':
          description: Invalid status value
      security:
        - fruitstore_auth:
            - 'write:producto'
  '/producto/{prodId}':
    get:
      tags:
        - producto
      summary: Encuentra productos por ID
      description: Devuelve un solo producto
      operationId: getProductById
      parameters:
        - name: prodId
          in: path
          description: ID del producto para devolver
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Producto'
            application/xml:
              schema:
                $ref: '#/components/schemas/Producto'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
      security:
        - api_key: []
    delete:
      tags:
        - producto
      summary: Elimina un producto
      operationId: deleteProduct
      parameters:
        - name: prodId
          in: path
          description: ID del producto a eliminar
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Product not found
      security:
        - fruitstore_auth:
            - 'write:producto'
            - 'read:producto'



    put:
      tags:
        - producto
      summary: Actualizar un producto existente
      operationId: updateProduct
      parameters:
        - name: prodId
          in: path
          description: ID del producto para devolver
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Product not found
        '405':
          description: Validation exception
      security:
        - fruitstore_auth:
            - 'write:producto'
            - 'read:producto'
      requestBody:
        $ref: '#/components/requestBodies/Producto'


  /pedido:
    post:
      tags:
        - pedido
      summary: Agregar un nuevo pedido
      operationId: addPedido
      responses:
        '405':
          description: Invalid input
      security:
        - fruitstore_auth:
            - 'write:pedido'
            - 'read:pedido'
      requestBody:
        $ref: '#/components/requestBodies/Pedido'

    get:
      tags:
        - pedido
      summary: Devuelve todos los pedidos
      description: Trae todos los pedidos existentes
      operationId: findAllPedidos
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pedido'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pedido'
        '400':
          description: Invalid status value
      security:
        - fruitstore_auth:
            - 'write:pedido'
            - 'read:pedido'
  '/pedido/{pedidoId}':
    get:
      tags:
        - pedido
      summary: Encuentra pedido por ID
      description: Devuelve un solo pedido
      operationId: getPedidoById
      parameters:
        - name: pedidoId
          in: path
          description: ID del pedido para devolver
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pedido'
            application/xml:
              schema:
                $ref: '#/components/schemas/Pedido'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pedido not found
      security:
        - api_key: []
    delete:
      tags:
        - pedido
      summary: Elimina un Pedido
      operationId: deletePedido
      parameters:
        - name: pedidoId
          in: path
          description: ID del pedido a eliminar
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Pedido not found
      security:
        - fruitstore_auth:
            - 'write:pedido'
            - 'read:pedido'
  '/pedido/estado/{pedidoId}':
    put:
      tags:
        - pedido
      summary: Actualizar el estado de un pedido
      operationId: updateEstadoPedido
      parameters:
        - name: pedidoId
          in: path
          description: ID del pedido para devolver
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Product not found
        '405':
          description: Validation exception
      security:
        - fruitstore_auth:
            - 'write:pedido'
            - 'read:pedido'
      requestBody:
        $ref: '#/components/requestBodies/Pedido'

  '/pedido/telegram/{us_telegram}':
    put:
      tags:
        - pedido
      summary: Actualizar la direccion de un pedido existente
      operationId: updatePedido
      parameters:
        - name: us_telegram
          in: path
          description: Usuario de telegram del cliente
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Product not found
        '405':
          description: Validation exception
      security:
        - fruitstore_auth:
            - 'write:pedido'
            - 'read:pedido'
      requestBody:
        $ref: '#/components/requestBodies/Pedido'





externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
components:
  schemas:
    Producto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nombre:
          type: string
          example: banana
        precio:
          type: number
          format: float
        descripcion:
          type: string
      xml:
        name: Producto
    Item-producto:
      type: object
      properties:
        id_producto:
          type: integer
          format: int64
        cantidad:
          type: integer
          format: int64
      xml:
        name: Item-producto

    Pedido:
      type: object
      properties:
        id:
          type: integer
          format: int64
        productos:
          type: array
          xml:
            name: productos
            wrapped: true
          items:
            $ref: '#/components/schemas/Item-producto'
        precio:
          type: integer
          format: int64
        us_telegram:
          type: string
        direccion:
          type: string
        estado:
          type: string
          description: Estado del pedido
          enum:
            - calle
            - pendiente
            - entregado
      xml:
        name: Pedido







  requestBodies:
    Producto:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Producto'
        application/xml:
          schema:
            $ref: '#/components/schemas/Producto'
      description: Producto para agregar
      required: true


    Pedido:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Pedido'
        application/xml:
          schema:
            $ref: '#/components/schemas/Pedido'
      description: Pedido para agregar
      required: true

  securitySchemes:
    fruitstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'http://petstore.swagger.io/oauth/dialog'
          scopes:
            'write:producto': modifica productos en tu cuenta
            'read:producto': lee tus productos
            'write:cliente': modifica clientes en tu cuenta
            'read:cliente': lee tus clientes
            'write:pedido': modifica pedido en tu cuenta
            'read:pedido': lee tus pedido
    api_key:
      type: apiKey
      name: api_key
      in: header
